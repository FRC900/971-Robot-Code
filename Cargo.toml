[package]
name = "compile_with_bazel"
version = "0.0.0"

# Mandatory (or Cargo tooling is unhappy)
[lib]
path = "fake_lib.rs"

[workspace]
members = [
	"third_party/autocxx",
	"third_party/autocxx/engine",
	"third_party/autocxx/parser",
	"third_party/autocxx/gen/cmd",
	"third_party/autocxx/macro",
	"third_party/autocxx/integration-tests",
	"third_party/flatbuffers/rust/flatbuffers",
]

[dependencies]
cxx = "1.0"
cxxbridge-macro = "1.0"
uuid = "1.0"
toml = "0.5"
anyhow = "1.0"
futures = "0.3"
once_cell = "1.13"
thiserror = "1.0"
bitflags = "1.3"
smallvec = "1.9"

# For bindgen.
bindgen = "0.58.1"
libloading = "=0.6.3"

# Bazel toolchains take care of linking the C++ standard library, so don't add
# an extra flag via Rust by enabling the `nothing` feature. I'm not even sure
# it would end up on the link command line, but this crate's build.rs attempts
# to find a C++ compiler itself otherwise which definitely doesn't work.
link-cplusplus = { version = "1.0", features = ["nothing"] }
