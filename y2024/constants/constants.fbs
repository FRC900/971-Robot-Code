include "frc971/vision/calibration.fbs";
include "frc971/vision/target_map.fbs";
include "frc971/control_loops/profiled_subsystem.fbs";
include "frc971/zeroing/constants.fbs";
include "frc971/control_loops/drivetrain/drivetrain_config.fbs";

namespace y2024;

table CameraConfiguration {
  calibration:frc971.vision.calibration.CameraCalibration (id: 0);
}

table ShotParams {
    shot_velocity: double (id: 0);

    // Angle of the altitude
    shot_altitude_angle: double (id: 1);

    // Angle of the catapult
    shot_catapult_angle: double (id: 2);

    // Speed over ground to use for shooting on the fly
    shot_speed_over_ground: double (id: 3);
}

table InterpolationTablePoint {
    distance_from_goal: double (id: 0);
    shot_params: ShotParams (id: 1);
}

// Amount of voltage to give to the intake rollers when:
// spitting, which represents voltage when IntakeRollerGoal is SPITTING
// and intaking, which represents voltage when IntakeRollerGoal is INTAKING
table IntakeRollerVoltages {
  spitting:double (id: 0);
  intaking:double (id: 1);
}

// Set points for the pivot in radians when:
// extended, which represents radians for when IntakePivotGoal is EXTENDED
// and retracted, which represents radians for when IntakePivotGoal is RETRACTED or NONE
table IntakePivotSetPoints {
  extended:double (id: 0);
  retracted:double (id: 1);
}

// Set points for the climber in meters when:
// fully extended, which represents meters for when ClimberGoal is FULL_EXTEND
// partially extended, which represents meters for when ClimberGoal is HALF_EXTEND
// and retracted, which represents meters for when ClimberGoal is RETRACT
table ClimberSetPoints {
  full_extend:double (id: 0);
  half_extend:double (id: 1);
  retract:double (id: 2);
}

table PotAndAbsEncoderConstants {
  zeroing_constants:frc971.zeroing.PotAndAbsoluteEncoderZeroingConstants (id: 0);
  potentiometer_offset:double (id: 1);
}

// Stores current limits for motors
table CurrentLimits {
  intake_pivot_supply_current_limit:double (id: 0);
  intake_pivot_stator_current_limit:double (id: 1);
  intake_roller_supply_current_limit:double (id: 2);
  intake_roller_stator_current_limit:double (id: 3);
  transfer_roller_supply_current_limit:double (id: 4);
  transfer_roller_stator_current_limit:double (id: 5);
  drivetrain_supply_current_limit:double (id: 6);
  drivetrain_stator_current_limit:double (id: 7);
  climber_supply_current_limit:double (id: 8);
  climber_stator_current_limit:double (id: 9);
  extend_supply_current_limit:double (id: 10);
  extend_stator_current_limit:double (id: 11);
  extend_roller_supply_current_limit:double (id: 12);
  extend_roller_stator_current_limit:double (id: 13);
}

table TransferRollerVoltages {
  transfer_in:double (id: 0);
  transfer_out:double (id: 1);
}

table ExtendRollerVoltages {
  scoring:double (id: 0);
  reversing:double (id: 1);
}

// Extend positions
table ExtendSetPoints {
  extended:double (id: 0);
  retracted:double (id: 1);
}

table RobotConstants {
  intake_constants:frc971.zeroing.AbsoluteEncoderZeroingConstants (id: 0);
  climber_constants:PotAndAbsEncoderConstants (id: 1);
  catapult_constants:PotAndAbsEncoderConstants (id: 2);
  altitude_constants:PotAndAbsEncoderConstants (id: 3);
  turret_constants:PotAndAbsEncoderConstants (id: 4);
  extend_constants:PotAndAbsEncoderConstants (id: 5);
}

// Common table for constants unrelated to the robot
table Common {
  target_map:frc971.vision.TargetMap (id: 0);
  shooter_interpolation_table: [InterpolationTablePoint] (id: 1);
  intake_roller_voltages:IntakeRollerVoltages (id : 2);
  intake_pivot_set_points:IntakePivotSetPoints (id: 3);
  intake_pivot:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 4);

  drivetrain:frc971.control_loops.drivetrain.fbs.DrivetrainConfig (id: 5);
  current_limits:CurrentLimits (id: 6);
  transfer_roller_voltages:TransferRollerVoltages (id: 7);
  climber:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 8);
  climber_set_points:ClimberSetPoints (id: 9);
  turret_loading_position: double (id: 10);
  catapult_return_position: double (id: 11);
  catapult:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 12);
  altitude:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 13);
  turret:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 14);
  extend:frc971.control_loops.StaticZeroingSingleDOFProfiledSubsystemCommonParams (id: 15);
  extend_setpoints:ExtendSetPoints (id: 16);
  extend_roller_voltages:ExtendRollerVoltages (id: 17);
}

table Constants {
  robot:RobotConstants (id: 0);
  common:Common (id: 1);
  cameras:[CameraConfiguration] (id: 2);
}

root_type Constants;
