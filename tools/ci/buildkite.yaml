env:
  STARTUP: --max_idle_secs=0 --watchfs
  COMMON: -c opt --stamp=no --curses=yes --symlink_prefix=/ --disk_cache=~/.cache/bazel/disk_cache/
  TARGETS: //... @com_github_google_glog//... @com_google_ceres_solver//... @com_github_rawrtc_rawrtc//... @com_google_googletest//...
  M4F_TARGETS: //...
  # Sanity check that we are able to build the y2020 roborio code, which confirms
  # that we have the platform compatibility for the roborio set up correctly.
  ROBORIO_TARGETS: ${TARGETS} //y2020:download_stripped

steps:
  - label: "lint"
    commands:
      - tools/ci/clean-disk.sh
      - tools/bazel ${STARTUP} --output_base=../lint_output_base run ${COMMON} --config=k8 //tools/lint:run-ci

  - label: "x86_64"
    commands:
      - tools/ci/clean-disk.sh
      - tools/bazel ${STARTUP} --output_base=../k8_output_base test ${COMMON} --config=k8 --config=eigen ${TARGETS}

  - label: "roborio"
    commands:
      - tools/ci/clean-disk.sh
      - tools/bazel ${STARTUP} --output_base=../roborio_output_base build ${COMMON} --config=roborio ${ROBORIO_TARGETS}

  - label: "armhf-debian"
    commands:
      - tools/ci/clean-disk.sh
      - tools/bazel ${STARTUP} --output_base=../armhf-debian_output_base build ${COMMON} --config=armhf-debian ${TARGETS}

  - label: "cortex-m4f"
    commands:
      - tools/ci/clean-disk.sh
      - tools/bazel ${STARTUP} --output_base=../cortex-m4f_output_base build ${COMMON} --config=cortex-m4f ${M4F_TARGETS}
